app.copyright=(FR)Copyright (C) 2006-2008 GB1. All rights reserved.
app.name=(FR)HealthCheck

errors.signin.badcredentials=(FR)Invalid username or password

general.or=(FR)or

header.logoff=(FR)Sign off
header.userlogin=(FR)Login
header.profile=(FR)Edit your profile

lostPassword.email=(FR)Email
lostPassword.email.unknown=(FR)Unknown email address
lostPassword.sent=(FR)Your password has been sent to your email address.
lostPassword.submit=(FR)Send

register.login=(FR)Login
register.login.invalid=(FR)Invalid login
register.login.taken=(FR)Login already taken
register.password1=(FR)Password
register.password2=(FR)Confirm password
register.password.invalid=(FR)Invalid password
register.password.mismatch=(FR)Password mismatch
register.email=(FR)Email
register.email.invalid=(FR)Invalid email
register.email.taken=(FR)Email already taken
register.emailSent=(FR)A message was sent to your email address with activation details.
register.submit=(FR)Register
register.error=(FR)Registration could not be submitted

register.activate.email=(FR)Email
register.activate.activationToken=(FR)Activation token
register.activate.activationToken.invalid=(FR)Invalid activation token
register.activate.submit=(FR)Activate
register.activate.activated=(FR)Your user account has been activated.

signin.failed=(FR)Signin failed
signin.login=(FR)Login
signin.password=(FR)Password
signin.rememberMe=(FR)Remember me
signin.submit=(FR)Sign in
signin.noAccountYet=(FR)Sign up
signin.lostPassword=(FR)Forgot your password?

users.list.title=(FR)User list

users.edit.title=(FR)User profile
users.edit.email=(FR)Email
users.edit.login=(FR)Login
users.edit.submit=(FR)Save
users.edit.cancel=(FR)Cancel
users.edit.email.invalid=(FR)Invalid email address
users.edit.email.taken=(FR)Email address already owned by another user
users.edit.success=(FR)User profile has been updated
users.edit.cancelled=(FR)User profile has not been modified
users.edit.error=(FR)Error when editing user: {0}.

workbench.welcome=(FR)Welcome to your workbench
workbench.menu=(FR)Actions
workbench.menu.users.list=(FR)List users
workbench.menu.foods.list=(FR)List foods
workbench.menu.meals.list=(FR)List meals
workbench.menu.metrics.manage=(FR)Manage body metrics

foods.title=(FR)Foods
foods.simpleFoods=(FR)Simple foods
foods.complexFoods=(FR)Complex foods
foods.noSimpleFoods=(FR)No simple foods found
foods.noComplexFoods=(FR)No complex foods found

foods.simpleFoods.create=(FR)Add a new simple food
foods.simpleFoods.edit=(FR)Edit
foods.simpleFoods.delete=(FR)Delete
foods.simpleFoods.confirmDelete=(FR)Are you sure you want to delete this food?

foods.complexFoods.create=(FR)Add a new complex food
foods.complexFoods.delete=(FR)Delete
foods.complexFoods.confirmDelete=(FR)Are you sure you want to delete this food?

foods.simpleFoods.create.title=(FR)New simple food
foods.simpleFoods.create.submit=(FR)Submit
foods.simpleFoods.create.cancel=(FR)Cancel
foods.simpleFoods.create.error=(FR)Error when creating food: {0}.
foods.simpleFoods.create.error.nameRequired=(FR)Name is required.

foods.simpleFoods.update.title=(FR)Update simple food
foods.simpleFoods.update.submit=(FR)Submit
foods.simpleFoods.update.cancel=(FR)Cancel
foods.simpleFoods.update.error=(FR)Error when updating food: {0}.
foods.simpleFoods.update.error.nameRequired=(FR)Name is required.

foods.complexFoods.create.title=(FR)New complex food
foods.complexFoods.create.submit=(FR)Submit
foods.complexFoods.create.cancel=(FR)Cancel
foods.complexFoods.create.error=(FR)Error when creating food: {0}.
foods.complexFoods.create.error.nameRequired=(FR)Name is required.

foods.complexFoods.update.title=(FR)Update complex food
foods.complexFoods.update.submit=(FR)Submit
foods.complexFoods.update.cancel=(FR)Cancel
foods.complexFoods.update.error=(FR)Error when updating food: {0}.
foods.complexFoods.update.error.nameRequired=(FR)Name is required.

meals.title=(FR)Meals
meals.noMealHistory=(FR)No meals found
meals.create=(FR)Add a meal
meals.delete=(FR)Delete
meals.confirmDelete=(FR)Are you sure you want to delete this meal?

meals.create.title=(FR)New meal
meals.create.submit=(FR)Submit
meals.create.cancel=(FR)Cancel
meals.create.dishes=(FR)Dishes
meals.create.addDish=(FR)Add a new dish
meals.create.removeDish=(FR)Remove this dish
meals.create.error=(FR)Error when creating meal: {0}.
meals.update.title=(FR)Update meal
meals.update.submit=(FR)Submit
meals.update.cancel=(FR)Cancel
meals.update.dishes=(FR)Dishes
meals.update.addDish=(FR)Add a new dish
meals.update.removeDish=(FR)Remove this dish
meals.update.error=(FR)Error when updating meal: {0}.

metrics.gastricStates.manage.title=(FR)Manage gastric states
metrics.gastricStates.manage.noStatesOnSelectedDay=(FR)There are no gastric states saved for this day.
metrics.gastricStates.manage.addState=(FR)Add a new state
metrics.gastricStates.loading=(FR)Loading gastric states...
metrics.gastricStates.loaded=(FR)Gastric states loaded
metrics.gastricStates.save=(FR)Save
metrics.gastricStates.saving=(FR)Saving...
metrics.gastricStates.saved=(FR)Saved

food.name=(FR)Name
food.foodGroup=(FR)Group
food.nutrients=(FR)Nutrients
food.ingredients=(FR)Ingredients
food.exception.alreadyExists=(FR)A food with this name already exists.
food.exception.selectAtLeastOneIngredient=(FR)You must select at least one ingredient.

meal.instant=(FR)Date and time
meal.dish=(FR)Dish
meal.preparationMethod=(FR)Preparation method
meal.exception.alreadyExists=(FR)A meal was already recorded for this hour.

gastricState.instant=(FR)Time
gastricState.level=(FR)Level
gastricState.level.normal=(FR)Normal
gastricState.level.slightlyBloated=(FR)Slighly bloated
gastricState.level.bloated=(FR)Bloated
gastricState.level.highlyBloated=(FR)Highly bloated
gastricState.level.crisis=(FR)Crisis

punctualGastricState.instant=(FR)Date
